{"version":3,"sources":["componenets/Topbar/index.js","App.js","reportWebVitals.js","index.js","componenets/Topbar/Topbar.module.css"],"names":["TopBar","state","movies","searchValue","currmovies","performsearch","length","data","filter","item","Year","includes","Title","setState","console","log","fetch","then","res","json","Search","React","version","this","className","styles","topbar","onChange","e","target","value","search","onClick","map","imdbID","Poster","src","width","Component","App","Topbar","username","flag","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"kOA2HeA,E,4MA9DXC,MACI,CACIC,OAAQ,GACRC,YAAa,GACbC,WAAY,I,EAWpBC,cAAgB,WACZ,GAAG,EAAKJ,MAAMC,OAAOI,OAAO,CAC5B,IAAMC,EAAO,EAAKN,MAAMC,OAAOM,QAAO,SAACC,GACnC,OAAQA,EAAKC,KAAKC,SAAS,EAAKV,MAAME,cAAcM,EAAKG,MAAMD,SAAS,EAAKV,MAAME,gBAGvF,EAAKU,SAAS,CAACT,WAAYG,M,uDAd/B,WAAoB,IAAD,OACfO,QAAQC,IAAI,SACZC,MAAM,kDACLC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GACH,EAAKL,SAAS,CAACX,OAASgB,EAAIE,OAAQhB,WAAac,EAAIE,c,oBAY/D,WAAU,IAAD,OAEPN,QAAQC,IAAI,eACZD,QAAQC,IAAIM,IAAMC,SAHX,MAIoCC,KAAKtB,MAAnBG,GAJtB,EAICF,OAJD,EAISC,YAJT,EAIsBC,YAC7B,OACE,gCACI,qBAAKoB,UAAWC,IAAOC,OAAvB,SACU,2CAEV,uBACAC,SAAU,SAACC,GAAD,OAAO,EAAKf,SAAS,CAAEV,YAAayB,EAAEC,OAAOC,WAEzD,wBAAQN,UAAWC,IAAOM,OAAQC,QAAST,KAAKlB,cAAhD,oBACA,8BAGAD,EAAWE,QAAUF,EAAW6B,KAAI,gBAAGC,EAAH,EAAGA,OAAOC,EAAV,EAAUA,OAAOzB,EAAjB,EAAiBA,KAAKE,EAAtB,EAAsBA,MAAtB,OAChC,gCACA,qBAAKwB,IAAKD,EAAQE,MAAO,MACvB,6BACGzB,IAEH,6BACGF,IAEH,6BACGwB,mB,GApDIb,IAAMiB,WC5CZC,EAXH,WAEV,OACE,8BACE,cAACC,EAAD,CAAQC,SAAS,SAASC,MAAM,EAAMnC,KAAM,QCGnCoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K,kBCfAa,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,0B","file":"static/js/main.490c4b46.chunk.js","sourcesContent":["\nimport React, { Component } from \"react\";\nimport { convertToUpper as toUpper, mockData } from \"../../utils/constants\";\nimport styles from \"./Topbar.module.css\";\n\n// class TopBar extends React.Component {\n//     state = \n//         {\n//         count: 0,\n//         val : \"\",\n//         prev: \"\", \n//         inp: \"\"\n//       };\n             \n    \n//     //   shouldComponentUpdate(nextProps, nextState) {\n//     //     if(this.state.prev == nextState.val)\n//     //         return false\n//     //     else{\n//     //         this.state.prev = nextState.val\n//     //         return true\n//     //     }\n          \n        \n//     //   }\n//   render() {\n//     console.log(\"Second Call\");\n//     const { count, val } = this.state;\n//     return (\n//       <div>\n//           <input    \n//           onChange={(e) => this.setState({ inp: e.target.value })}\n//         />\n//         <button className={styles.search} onClick={ () =>{this.setState({val: this.state.inp})}}>Submit</button>\n//         <h1>{val}</h1>\n//         <h1 className={styles.heading}>Count - {this.state.count}</h1>\n\n//         <button\n//           onClick={() =>\n//             this.setState({\n//               count: ++this.state.count\n//             })\n//           }\n//         >\n//           +\n//         </button>\n//         <button\n//           onClick={() =>\n//             this.setState({\n//               count: --this.state.count,\n//             })\n//           }\n//         >\n//           -\n//         </button>\n//       </div>\n//     );\n//   }\n// }\n\nclass TopBar extends React.Component {\n    state = \n        {\n            movies: [],\n            searchValue: \"\",\n            currmovies: []\n      };\n    \n    componentDidMount(){\n        console.log(\"third\")\n        fetch(\"https://www.omdbapi.com/?apikey=45f0782a&s=war\")\n        .then((res) => res.json())\n        .then((res) => {\n            this.setState({movies : res.Search, currmovies : res.Search})\n        })\n    }\n    performsearch = ()=> {\n        if(this.state.movies.length){\n        const data = this.state.movies.filter((item)=>{\n            return (item.Year.includes(this.state.searchValue)||item.Title.includes(this.state.searchValue))\n\n        })\n        this.setState({currmovies: data})        \n        }\n    }\n  render() {\n\n    console.log(\"Second Call\");\n    console.log(React.version)\n    const { movies, searchValue, currmovies} = this.state;\n    return (\n      <div>\n          <div className={styles.topbar}>\n                    <h2> Hooked</h2>\n                </div>\n          <input    \n          onChange={(e) => this.setState({ searchValue: e.target.value })}\n        />\n        <button className={styles.search} onClick={this.performsearch}>Submit</button>\n        <div>\n        \n        {\n        currmovies.length && currmovies.map(({ imdbID,Poster,Year,Title })=>(\n            <div>\n            <img src={Poster} width={200} />\n              <h1> \n                {Title}\n              </h1>\n              <h2>\n                {Year}\n              </h2>\n              <h2>\n                {imdbID}\n              </h2>    \n            </div>\n        ))}\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TopBar;","import React from 'react';\nimport Topbar from \"./componenets/Topbar\";\n// import PlacesGrid from \"./components/PlacesGrid\";\n// import Footer from \"./components/Footer\";\n\nconst App = () => {\n  // sfc\n  return (\n    <div>\n      <Topbar username=\"Sachin\" flag={true} data={[]} />\n      {/* <PlacesGrid />\n      <Footer /> */}\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topbar\":\"Topbar_topbar__2nqEl\",\"search\":\"Topbar_search__1JnXA\"};"],"sourceRoot":""}